{
    "program": "Arithmetic and Advanced Arithmetic Operations",
    "features": {
        "Classes": [
            {
                "name": "ArithmeticOperations",
                "description": ". Write a detailed and well-structured documentation specifically for a class named 'ArithmeticOperations' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation.",
                "methods": [
                    {
                        "name": "__init__",
                        "description": ". Write a detailed and well-structured documentation specifically for a method named '__init__' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "add",
                        "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Write a detailed and well-structured documentation specifically for a method named 'add' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "subtract",
                        "description": ". Write a detailed and well-structured documentation specifically for a method named'subtract' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "multiply",
                        "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "divide",
                        "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "modulus",
                        "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "power",
                        "description": ". Write a detailed and well-structured documentation specifically for a method named 'power' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "square_root",
                        "description": ". Write a detailed and well-structured documentation specifically for a method named'square_root' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    }
                ]
            },
            {
                "name": "AdvancedArithmeticOperations",
                "description": ". Write a detailed and well-structured documentation specifically for a class named 'AdvancedArithmeticOperations' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation.",
                "methods": [
                    {
                        "name": "__init__",
                        "description": ". Write a detailed and well-structured documentation specifically for a method named '__init__' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "factorial",
                        "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Write a detailed and well-structured documentation specifically for a method named 'factorial' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "log",
                        "description": ". Write a detailed and well-structured documentation specifically for a method named 'log' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "exp",
                        "description": ". Write a detailed and well-structured documentation specifically for a method named 'exp' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "sin",
                        "description": ". Write a detailed and well-structured documentation specifically for a method named'sin' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    },
                    {
                        "name": "cos",
                        "description": ". Write a detailed and well-structured documentation specifically for a method named 'cos' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
                    }
                ]
            }
        ],
        "Functions": [
            {
                "name": "__init__",
                "description": ". Write a detailed and well-structured documentation specifically for a function named '__init__' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "add",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Write a detailed and well-structured documentation specifically for a function named 'add' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "subtract",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be used and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "multiply",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "divide",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "modulus",
                "description": "in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "power",
                "description": ". Write a detailed and well-structured documentation specifically for a function named 'power' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "square_root",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "menu",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "get_input",
                "description": ". Write a detailed and well-structured documentation specifically for a function named 'get_input' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "perform_operation",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "main",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be used and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "__init__",
                "description": ". Write a detailed and well-structured documentation specifically for a function named '__init__' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "factorial",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Write a detailed and well-structured documentation specifically for a function named 'factorial' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "log",
                "description": ". Write a detailed and well-structured documentation specifically for a function named 'log' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "exp",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "sin",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Write a detailed and well-structured documentation specifically for a function named'sin' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "cos",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be used and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "advanced_menu",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be used and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "get_advanced_input",
                "description": ". Write a detailed and well-structured documentation specifically for a function named 'get_advanced_input' in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "perform_advanced_operation",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be used and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "advanced_operations",
                "description": ". Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be used and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            },
            {
                "name": "extended_program",
                "description": "in a Python program. Explain its unique purpose, usage scenarios, and how it connects to other components in the program. For classes, include details about its attributes and methods. For functions or methods, describe their inputs, outputs, and logic flow. Provide specific examples where they can be utilized and avoid general descriptions. Follow a structured format commonly used in professional software documentation."
            }
        ],
        "Error Handling": [],
        "Input Handling": [],
        "User Interaction": [],
        "Program Flow": [],
        "Mathematical Operations": []
    },
    "variables": {
        "choice": "Unknown",
        "num1": "Unknown",
        "num2": "Unknown",
        "arithmetic": "Unknown",
        "adv_arithmetic": "Unknown",
        "user_choice": "Unknown"
    }
}